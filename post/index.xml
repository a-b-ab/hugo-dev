<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on 乌鸦</title>
        <link>https://a-b-ab.github.io/hugo-dev/post/</link>
        <description>Recent content in Posts on 乌鸦</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>乌鸦</copyright>
        <lastBuildDate>Wed, 16 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://a-b-ab.github.io/hugo-dev/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>联想掉网卡解决方案</title>
        <link>https://a-b-ab.github.io/hugo-dev/p/%E8%81%94%E6%83%B3%E6%8E%89%E7%BD%91%E5%8D%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
        <pubDate>Wed, 16 Oct 2024 00:00:00 +0000</pubDate>
        
        <guid>https://a-b-ab.github.io/hugo-dev/p/%E8%81%94%E6%83%B3%E6%8E%89%E7%BD%91%E5%8D%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
        <description>&lt;img src="https://raw.githubusercontent.com/a-b-ab/picture/main/Picgo202403211058784.jpg" alt="Featured image of post 联想掉网卡解决方案" /&gt;&lt;h1 id=&#34;前言&#34;&gt;前言
&lt;/h1&gt;&lt;p&gt;相信大家遇到过掉网卡驱动的情况，情况就是网络选项都没有了，&lt;code&gt;WIFI&lt;/code&gt;图标都没有了&lt;/p&gt;
&lt;h2 id=&#34;救急&#34;&gt;救急
&lt;/h2&gt;&lt;p&gt;既然网络选项没有了，那我们要是急需上网怎么办，可以用&lt;code&gt;数据线&lt;/code&gt;连接&lt;code&gt;手机&lt;/code&gt;和&lt;code&gt;笔记本&lt;/code&gt;,在手机设置里打开&lt;code&gt;个人热点&lt;/code&gt;，打开&lt;code&gt;USB共享&lt;/code&gt;这样你的笔记本就可以上网了。不过这个方法只适合临时，毕竟每次这样很麻烦。&lt;/p&gt;
&lt;h2 id=&#34;重启大法&#34;&gt;重启大法：
&lt;/h2&gt;&lt;p&gt;无脑重启，偶尔可以解决问题。
&lt;em&gt;重启大法好啊！！！&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;驱动重启或重装&#34;&gt;驱动重启或重装
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;打开&lt;code&gt;设备管理器&lt;/code&gt;,查看网络设配器，图中我选中的就是无线网卡驱动，如果有个&lt;code&gt;黄色感叹号&lt;/code&gt;就是驱动没有正常运行。
&lt;img src=&#34;https://a-b-ab.github.io/hugo-dev/hugo-dev/p/%E8%81%94%E6%83%B3%E6%8E%89%E7%BD%91%E5%8D%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image.png&#34;
	width=&#34;1173&#34;
	height=&#34;841&#34;
	srcset=&#34;https://a-b-ab.github.io/hugo-dev/hugo-dev/p/%E8%81%94%E6%83%B3%E6%8E%89%E7%BD%91%E5%8D%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image_hu11799494602823624474.png 480w, https://a-b-ab.github.io/hugo-dev/hugo-dev/p/%E8%81%94%E6%83%B3%E6%8E%89%E7%BD%91%E5%8D%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image_hu11170564171506667284.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;alt text&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;139&#34;
		data-flex-basis=&#34;334px&#34;
	
&gt;&lt;/li&gt;
&lt;li&gt;右键对应的驱动
可以先&lt;code&gt;更新驱动程序&lt;/code&gt;试试
或者直接&lt;code&gt;禁用设备&lt;/code&gt;，然后&lt;code&gt;启用设备&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果都不行卸载设备
然后去对应电脑官网下载一个对应的&lt;code&gt;无线网卡驱动&lt;/code&gt;
然后重启&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;注册表&#34;&gt;注册表
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;键盘按&lt;code&gt;win+r&lt;/code&gt;，弹出运行窗口&lt;/li&gt;
&lt;li&gt;输入“redegit”，进入注册表，&lt;/li&gt;
&lt;li&gt;删除HKEY_CLASSES_ROOT\CLSID{3d09c1ca-2bcc-40b7-b9bb-3f3ec143a87b}，然后网卡禁用再启用。
&lt;img src=&#34;https://a-b-ab.github.io/hugo-dev/hugo-dev/p/%E8%81%94%E6%83%B3%E6%8E%89%E7%BD%91%E5%8D%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image-1.png&#34;
	width=&#34;1726&#34;
	height=&#34;1257&#34;
	srcset=&#34;https://a-b-ab.github.io/hugo-dev/hugo-dev/p/%E8%81%94%E6%83%B3%E6%8E%89%E7%BD%91%E5%8D%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image-1_hu10009510213009979668.png 480w, https://a-b-ab.github.io/hugo-dev/hugo-dev/p/%E8%81%94%E6%83%B3%E6%8E%89%E7%BD%91%E5%8D%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image-1_hu7242489316355431978.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;alt text&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;137&#34;
		data-flex-basis=&#34;329px&#34;
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;硬件问题&#34;&gt;硬件问题
&lt;/h2&gt;&lt;p&gt;掉网卡有多种可能，有可能是一些其他驱动冲突。有时出现掉网卡的状况可能是因为温度过高，硬件的自我保护机制，强制停止运行。这种情况很有可能是我们的散热系统里面进了灰尘，导致散热系统不能完全发挥性能。也有可能是网卡实体位置不对等等。。。&lt;/p&gt;
&lt;p&gt;如果出现这些问题去线下店看看喽&lt;/p&gt;
</description>
        </item>
        <item>
        <title>个人博客搭建</title>
        <link>https://a-b-ab.github.io/hugo-dev/p/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</link>
        <pubDate>Wed, 20 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://a-b-ab.github.io/hugo-dev/p/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</guid>
        <description>&lt;img src="https://raw.githubusercontent.com/a-b-ab/picture/main/Picgo202403181915672.jpeg" alt="Featured image of post 个人博客搭建" /&gt;&lt;h1 id=&#34;前言&#34;&gt;前言
&lt;/h1&gt;&lt;p&gt;&lt;em&gt;在搭建个人博客时，遇到了各种阴间问题，为此我删了起码七个库，都是泪，归根到底就是两个问题，一是&lt;code&gt;主题配置&lt;/code&gt;，二是&lt;code&gt;远程连接&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;hugo静态网站生成器&#34;&gt;hugo（静态网站生成器）
&lt;/h1&gt;&lt;p&gt;Hugo是一个快速、灵活且功能强大的静态网站生成器。它使用Go语言开发，旨在帮助用户轻松创建和管理网站&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.gohugo.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo&lt;/a&gt;中文文档&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo&lt;/a&gt;下载地址&lt;/p&gt;
&lt;h2 id=&#34;生成站点&#34;&gt;生成站点
&lt;/h2&gt;&lt;p&gt;使用Hugo快速生成站点，比如希望生成到 /path/to/site 路径：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;win+r&lt;/code&gt;输入&lt;code&gt;cmd&lt;/code&gt;调用命令行&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hugo new site /path/to/site&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样就在 /path/to/site 目录里生成了初始站点，进去目录：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cd /path/to/site&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;站点目录结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;archetypes/:存放内容模板的目录&lt;/li&gt;
&lt;li&gt;content/:：存放所有内容文件（如Markdown文件）的目录。&lt;/li&gt;
&lt;li&gt;layouts/:存放布局文件的目录。&lt;/li&gt;
&lt;li&gt;static/:存放静态资源（如图片、CSS、JavaScript等）的目录&lt;/li&gt;
&lt;li&gt;config.toml(yaml):站点的配置文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这个目录下，最主要的是对hugo.toml，themes/的配置。创建的所有.md文件都放置在content/文件下，所有文章的图片都放在static/下面&lt;/p&gt;
&lt;h2 id=&#34;创建文章&#34;&gt;创建文章
&lt;/h2&gt;&lt;p&gt;创建一个 about 页面&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hugo new about.md&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;about.md 自动生成到了 content/about.md ，打开 about.md 看下
&amp;mdash;
title: Chinese Test
description: 这是一个副标题
date: 2020-09-09
slug: test-chinese
image: 文章封面图片
categories:
    - Test
    - 测试
&amp;mdash;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;title: 页面或文章的标题，这里是 &amp;ldquo;Chinese Test&amp;rdquo;。&lt;/li&gt;
&lt;li&gt;description: 页面或文章的描述，这里是 &amp;ldquo;这是一个副标题&amp;rdquo;。&lt;/li&gt;
&lt;li&gt;date: 文章的发布日期，这里是 &amp;ldquo;2020-09-09&amp;rdquo;。&lt;/li&gt;
&lt;li&gt;slug: 文章的URL别名，这里是 &amp;ldquo;test-chinese&amp;rdquo;。&lt;/li&gt;
&lt;li&gt;image: 文章的封面图片，这里是 &amp;ldquo;helena-hertz-wWZzXlDpMog-unsplash.jpg&amp;rdquo;。&lt;/li&gt;
&lt;li&gt;categories: 文章的分类，这里有两个分类：&amp;ldquo;Test&amp;rdquo; 和 &amp;ldquo;测试&amp;rdquo;。&lt;/li&gt;
&lt;li&gt;draft:草稿，建议直接设为&lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;正文内容&lt;/p&gt;
&lt;p&gt;创建第一篇文章，放到 post 目录，方便之后生成聚合页面&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hugo new post/first.md&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;安装皮肤&#34;&gt;安装皮肤
&lt;/h2&gt;&lt;p&gt;一个好看的主题是必要的，但是完全自己去写就太麻烦了，hugo中有很多精美的主题，比较方便的操作是在Hugo项目目录里面使用Git命令来克隆themes：你需要提供主题的 Git 仓库 URL。通常，主题的仓库 URL 可以在 Hugo Themes 官方网站或主题的文档中找到。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git clone &lt;a class=&#34;link&#34; href=&#34;https://github.com/author/theme-name.git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/author/theme-name.git&lt;/a&gt; themes/theme-name&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;或者直接下载主题的压缩包，将其解压到themes/文件夹下，这样的话，就需要你对hugo.toml文件进行一点过的修改。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;每个主题文件里面都有对应的配置教程和演示网站，比如&lt;code&gt;stack&lt;/code&gt;在&lt;code&gt;exampleSite&lt;/code&gt;文件夹里面&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置hugotoml&#34;&gt;配置hugo.toml
&lt;/h2&gt;&lt;p&gt;好多教程里面直接就说会生成&lt;code&gt;config.yaml&lt;/code&gt;文件，但事实上新版的都是生成的&lt;code&gt;hugo.toml&lt;/code&gt;，这不免让第一次配置的人感到迷惑，这两种的使用都是可以的，只是在语法结构上会有区别(类似于c++和python)，如果你想要完全自己手搓，按照你喜欢的语言就好，如果像我一样，只想点点鼠标，那就主要观察你下载的themes里面它使用的是什么，跟着用就行。&lt;/p&gt;
&lt;p&gt;配置文件可以理解为对这个项目的总的配置，比如修改网站的标题等&lt;/p&gt;
&lt;p&gt;使用主题前最好看一下主题相应的配置教程，不同的主题是不一样，主题就是别人写好的网站的模板，而你就是去套用别人的模板。&lt;/p&gt;
&lt;p&gt;theme = &amp;ldquo;my-theme&amp;rdquo;
my-theme是你下载的theme的主题名，要和你解压的文件名一致&lt;/p&gt;
&lt;p&gt;配置还有很多，可以结合网上资源或自己专业知识定制自己的网站，类似：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;sidebar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;emoji&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;🍔&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subtitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;所行皆坦途,所愿皆如期&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;avatar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;img/avatar.jpg&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;生成网站&#34;&gt;生成网站
&lt;/h2&gt;&lt;p&gt;需要注意的是，虽然我们做了这么多，但是在这个结构下(在 my-site这个结构下)，我们网站的页面实际上是还没有生成的，要想生成静态网站页面，必须运行如下命令&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hugo&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;命令运行后，在上文提到my-site这个结构下会产生一个public/文件夹，里面保存生成的静态页面，后面将其在GitHub上面布置，实际上就是将public/中的内容远程推送到Github仓库中后进行展示。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hugo server&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以在本地预览你生成的网站，点击链接就可以在你本地的电脑看到自己搭建的网页的，但是这只是完成了一半，你需要将其托管到&lt;code&gt;github page&lt;/code&gt;上，别人才能通过网址找到你的网站，&lt;code&gt;github page&lt;/code&gt;是最简单且免费的方法，当然便宜的东西是有缺陷的，如果以后自己想深入，就需要买个域名和服务器了&lt;/p&gt;
&lt;h2 id=&#34;推送到github&#34;&gt;推送到GitHub
&lt;/h2&gt;&lt;p&gt;首先在GitHub上创建一个仓库，名字最好和你自己的名字一样，其实也无所谓，但是好多人都这么做，但我不是&lt;/p&gt;
&lt;h3 id=&#34;在pubilc文件夹中创建仓库&#34;&gt;在pubilc文件夹中创建仓库
&lt;/h3&gt;&lt;p&gt;记得cd 进入对应的文件夹&lt;/p&gt;
&lt;p&gt;其实远程连接在我的&lt;code&gt;git&lt;/code&gt;博客上有详细的教程，这里我大概说一下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git init 初始化仓库
git add. 增加所有修改的意思
git commit -m &amp;ldquo;备注&amp;rdquo;  提交到远程仓库“备注随便写，你写我是傻逼都行”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;将两个仓库链接起来&#34;&gt;将两个仓库链接起来
&lt;/h2&gt;&lt;p&gt;这一步是最恶心我的，不知道为什么，不能用&lt;code&gt;http&lt;/code&gt;链接，只能用&lt;code&gt;ssh&lt;/code&gt;链接
大概意思就是你需要在你的电脑生成一个ssh链接，然后将其放到GitHub的配置上&lt;/p&gt;
&lt;p&gt;这步是参考别人的&lt;/p&gt;
&lt;h3 id=&#34;打开git-bash命令窗口&#34;&gt;打开git bash命令窗口
&lt;/h3&gt;&lt;h3 id=&#34;生成ssh-key&#34;&gt;生成ssh key
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;ssh-keygen -t rsa -b 4096 -C &amp;ldquo;&lt;a class=&#34;link&#34; href=&#34;mailto:your_email@example.com&#34; &gt;your_email@example.com&lt;/a&gt;&amp;rdquo;
&lt;a class=&#34;link&#34; href=&#34;mailto:your_email@example.com&#34; &gt;your_email@example.com&lt;/a&gt;为github上你注册的email地址。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后直接三个enter不管他&lt;/p&gt;
&lt;p&gt;上面默认生成在用户主目录的.ssh目录下，可以自己输入自定义位置&lt;/p&gt;
&lt;h3 id=&#34;把ssh-key添加到github&#34;&gt;把ssh key添加到github
&lt;/h3&gt;&lt;p&gt;复制文件c/Users/Administrator/.ssh/id_rsa.pub内容，把key添加到：github &amp;gt; settings &amp;gt; SSH and GPG keys &amp;gt; New SSH key &amp;gt; 粘贴保存。&lt;/p&gt;
&lt;h3 id=&#34;测试ssh连接&#34;&gt;测试SSH连接
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;ssh -T &lt;a class=&#34;link&#34; href=&#34;mailto:git@github.com&#34; &gt;git@github.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果成功的话你就可以通过SSH方式来clone及提交代码了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git branch -M main // 创建一个分支
git remote add origin &lt;a class=&#34;link&#34; href=&#34;https://github.com/your-username/your-repo.git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/your-username/your-repo.git&lt;/a&gt; //使用 git remote add 命令将远程仓库添加到仓库配置中
git remote set-url origin &lt;a class=&#34;link&#34; href=&#34;mailto:git@github.com&#34; &gt;git@github.com&lt;/a&gt;:your-username/your-repo.git //使用 SSH 连接后，可以使用 SSH URL 推送到 GitHub 仓库
git push -u origin main //推送文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;后续提交&#34;&gt;后续提交
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;hugo //在站点中运行
cd public/
git add . //提交文件
git commit -m &amp;ldquo;备注&amp;rdquo; //推送到远程：在ssh已连接的情况下
git push -u origin main&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
