[{"content":"前言 相信大家遇到过掉网卡驱动的情况，情况就是网络选项都没有了，WIFI图标都没有了\n救急 既然网络选项没有了，那我们要是急需上网怎么办，可以用数据线连接手机和笔记本,在手机设置里打开个人热点，打开USB共享这样你的笔记本就可以上网了。不过这个方法只适合临时，毕竟每次这样很麻烦。\n重启大法： 无脑重启，偶尔可以解决问题。 重启大法好啊！！！\n驱动重启或重装 打开设备管理器,查看网络设配器，图中我选中的就是无线网卡驱动，如果有个黄色感叹号就是驱动没有正常运行。 右键对应的驱动 可以先更新驱动程序试试 或者直接禁用设备，然后启用设备 如果都不行卸载设备 然后去对应电脑官网下载一个对应的无线网卡驱动 然后重启 注册表 键盘按win+r，弹出运行窗口 输入“redegit”，进入注册表， 删除HKEY_CLASSES_ROOT\\CLSID{3d09c1ca-2bcc-40b7-b9bb-3f3ec143a87b}，然后网卡禁用再启用。 硬件问题 掉网卡有多种可能，有可能是一些其他驱动冲突。有时出现掉网卡的状况可能是因为温度过高，硬件的自我保护机制，强制停止运行。这种情况很有可能是我们的散热系统里面进了灰尘，导致散热系统不能完全发挥性能。也有可能是网卡实体位置不对等等。。。\n如果出现这些问题去线下店看看喽\n","date":"2024-10-16T00:00:00Z","image":"https://raw.githubusercontent.com/a-b-ab/picture/main/Picgo202403211058784.jpg","permalink":"https://a-b-ab.github.io/hugo-dev/p/%E8%81%94%E6%83%B3%E6%8E%89%E7%BD%91%E5%8D%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","title":"联想掉网卡解决方案"},{"content":"前言 在搭建个人博客时，遇到了各种阴间问题，为此我删了起码七个库，都是泪，归根到底就是两个问题，一是主题配置，二是远程连接\nhugo（静态网站生成器） Hugo是一个快速、灵活且功能强大的静态网站生成器。它使用Go语言开发，旨在帮助用户轻松创建和管理网站\nhugo中文文档\nhugo下载地址\n生成站点 使用Hugo快速生成站点，比如希望生成到 /path/to/site 路径：\nwin+r输入cmd调用命令行\nhugo new site /path/to/site\n这样就在 /path/to/site 目录里生成了初始站点，进去目录：\ncd /path/to/site\n站点目录结构：\narchetypes/:存放内容模板的目录 content/:：存放所有内容文件（如Markdown文件）的目录。 layouts/:存放布局文件的目录。 static/:存放静态资源（如图片、CSS、JavaScript等）的目录 config.toml(yaml):站点的配置文件。 在这个目录下，最主要的是对hugo.toml，themes/的配置。创建的所有.md文件都放置在content/文件下，所有文章的图片都放在static/下面\n创建文章 创建一个 about 页面\nhugo new about.md\nabout.md 自动生成到了 content/about.md ，打开 about.md 看下 \u0026mdash; title: Chinese Test description: 这是一个副标题 date: 2020-09-09 slug: test-chinese image: 文章封面图片 categories: - Test - 测试 \u0026mdash;\ntitle: 页面或文章的标题，这里是 \u0026ldquo;Chinese Test\u0026rdquo;。 description: 页面或文章的描述，这里是 \u0026ldquo;这是一个副标题\u0026rdquo;。 date: 文章的发布日期，这里是 \u0026ldquo;2020-09-09\u0026rdquo;。 slug: 文章的URL别名，这里是 \u0026ldquo;test-chinese\u0026rdquo;。 image: 文章的封面图片，这里是 \u0026ldquo;helena-hertz-wWZzXlDpMog-unsplash.jpg\u0026rdquo;。 categories: 文章的分类，这里有两个分类：\u0026ldquo;Test\u0026rdquo; 和 \u0026ldquo;测试\u0026rdquo;。 draft:草稿，建议直接设为false 正文内容\n创建第一篇文章，放到 post 目录，方便之后生成聚合页面\nhugo new post/first.md\n安装皮肤 一个好看的主题是必要的，但是完全自己去写就太麻烦了，hugo中有很多精美的主题，比较方便的操作是在Hugo项目目录里面使用Git命令来克隆themes：你需要提供主题的 Git 仓库 URL。通常，主题的仓库 URL 可以在 Hugo Themes 官方网站或主题的文档中找到。\ngit clone https://github.com/author/theme-name.git themes/theme-name\n或者直接下载主题的压缩包，将其解压到themes/文件夹下，这样的话，就需要你对hugo.toml文件进行一点过的修改。\n每个主题文件里面都有对应的配置教程和演示网站，比如stack在exampleSite文件夹里面\n配置hugo.toml 好多教程里面直接就说会生成config.yaml文件，但事实上新版的都是生成的hugo.toml，这不免让第一次配置的人感到迷惑，这两种的使用都是可以的，只是在语法结构上会有区别(类似于c++和python)，如果你想要完全自己手搓，按照你喜欢的语言就好，如果像我一样，只想点点鼠标，那就主要观察你下载的themes里面它使用的是什么，跟着用就行。\n配置文件可以理解为对这个项目的总的配置，比如修改网站的标题等\n使用主题前最好看一下主题相应的配置教程，不同的主题是不一样，主题就是别人写好的网站的模板，而你就是去套用别人的模板。\ntheme = \u0026ldquo;my-theme\u0026rdquo; my-theme是你下载的theme的主题名，要和你解压的文件名一致\n配置还有很多，可以结合网上资源或自己专业知识定制自己的网站，类似：\n1 2 3 4 5 6 7 sidebar: emoji: 🍔 subtitle: 所行皆坦途,所愿皆如期 avatar: enabled: true local: true src: img/avatar.jpg 生成网站 需要注意的是，虽然我们做了这么多，但是在这个结构下(在 my-site这个结构下)，我们网站的页面实际上是还没有生成的，要想生成静态网站页面，必须运行如下命令\nhugo\n命令运行后，在上文提到my-site这个结构下会产生一个public/文件夹，里面保存生成的静态页面，后面将其在GitHub上面布置，实际上就是将public/中的内容远程推送到Github仓库中后进行展示。\nhugo server\n可以在本地预览你生成的网站，点击链接就可以在你本地的电脑看到自己搭建的网页的，但是这只是完成了一半，你需要将其托管到github page上，别人才能通过网址找到你的网站，github page是最简单且免费的方法，当然便宜的东西是有缺陷的，如果以后自己想深入，就需要买个域名和服务器了\n推送到GitHub 首先在GitHub上创建一个仓库，名字最好和你自己的名字一样，其实也无所谓，但是好多人都这么做，但我不是\n在pubilc文件夹中创建仓库 记得cd 进入对应的文件夹\n其实远程连接在我的git博客上有详细的教程，这里我大概说一下\ngit init 初始化仓库 git add. 增加所有修改的意思 git commit -m \u0026ldquo;备注\u0026rdquo; 提交到远程仓库“备注随便写，你写我是傻逼都行”\n将两个仓库链接起来 这一步是最恶心我的，不知道为什么，不能用http链接，只能用ssh链接 大概意思就是你需要在你的电脑生成一个ssh链接，然后将其放到GitHub的配置上\n这步是参考别人的\n打开git bash命令窗口 生成ssh key ssh-keygen -t rsa -b 4096 -C \u0026ldquo;your_email@example.com\u0026rdquo; your_email@example.com为github上你注册的email地址。\n然后直接三个enter不管他\n上面默认生成在用户主目录的.ssh目录下，可以自己输入自定义位置\n把ssh key添加到github 复制文件c/Users/Administrator/.ssh/id_rsa.pub内容，把key添加到：github \u0026gt; settings \u0026gt; SSH and GPG keys \u0026gt; New SSH key \u0026gt; 粘贴保存。\n测试SSH连接 ssh -T git@github.com\n如果成功的话你就可以通过SSH方式来clone及提交代码了\ngit branch -M main // 创建一个分支 git remote add origin https://github.com/your-username/your-repo.git //使用 git remote add 命令将远程仓库添加到仓库配置中 git remote set-url origin git@github.com:your-username/your-repo.git //使用 SSH 连接后，可以使用 SSH URL 推送到 GitHub 仓库 git push -u origin main //推送文件\n后续提交 hugo //在站点中运行 cd public/ git add . //提交文件 git commit -m \u0026ldquo;备注\u0026rdquo; //推送到远程：在ssh已连接的情况下 git push -u origin main\n","date":"2024-03-20T00:00:00Z","image":"https://raw.githubusercontent.com/a-b-ab/picture/main/Picgo202403181915672.jpeg","permalink":"https://a-b-ab.github.io/hugo-dev/p/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","title":"个人博客搭建"}]